// Generated by Dagger (https://dagger.dev).
package com.example.ca2mfusion.modules;

import com.example.ca2mfusion.db.AppDatabase;
import com.example.ca2mfusion.repositories.OrderRepoI;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepoModule_ProvideOrderRepoFactory implements Factory<OrderRepoI> {
  private final RepoModule module;

  private final Provider<AppDatabase> appDatabaseProvider;

  public RepoModule_ProvideOrderRepoFactory(RepoModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public OrderRepoI get() {
    return provideOrderRepo(module, appDatabaseProvider.get());
  }

  public static RepoModule_ProvideOrderRepoFactory create(RepoModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    return new RepoModule_ProvideOrderRepoFactory(module, appDatabaseProvider);
  }

  public static OrderRepoI provideOrderRepo(RepoModule instance, AppDatabase appDatabase) {
    return Preconditions.checkNotNull(instance.provideOrderRepo(appDatabase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
