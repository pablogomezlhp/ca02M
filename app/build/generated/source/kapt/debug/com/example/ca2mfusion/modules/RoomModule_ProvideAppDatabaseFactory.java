// Generated by Dagger (https://dagger.dev).
package com.example.ca2mfusion.modules;

import android.app.Application;
import com.example.ca2mfusion.db.AppDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvideAppDatabaseFactory implements Factory<AppDatabase> {
  private final RoomModule module;

  private final Provider<Application> applicationContextProvider;

  public RoomModule_ProvideAppDatabaseFactory(RoomModule module,
      Provider<Application> applicationContextProvider) {
    this.module = module;
    this.applicationContextProvider = applicationContextProvider;
  }

  @Override
  public AppDatabase get() {
    return provideAppDatabase(module, applicationContextProvider.get());
  }

  public static RoomModule_ProvideAppDatabaseFactory create(RoomModule module,
      Provider<Application> applicationContextProvider) {
    return new RoomModule_ProvideAppDatabaseFactory(module, applicationContextProvider);
  }

  public static AppDatabase provideAppDatabase(RoomModule instance,
      Application applicationContext) {
    return Preconditions.checkNotNull(instance.provideAppDatabase(applicationContext), "Cannot return null from a non-@Nullable @Provides method");
  }
}
