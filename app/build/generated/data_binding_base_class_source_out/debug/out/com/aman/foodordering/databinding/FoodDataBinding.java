// Generated by data binding compiler. Do not edit!
package com.aman.foodordering.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.Group;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.aman.foodordering.R;
import com.example.ca2mfusion.db.entity.Food;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FoodDataBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatButton btnAdd;

  @NonNull
  public final Group groupRetry;

  @NonNull
  public final AppCompatTextView tvDescription;

  @NonNull
  public final AppCompatTextView tvItemCount;

  @NonNull
  public final AppCompatTextView tvMinus;

  @NonNull
  public final AppCompatTextView tvPlus;

  @NonNull
  public final AppCompatTextView tvRate;

  @NonNull
  public final AppCompatTextView tvTitle;

  @NonNull
  public final View viewPlusMinus;

  @Bindable
  protected Boolean mShouldShowAddButton;

  @Bindable
  protected Boolean mShouldPlusMinusButton;

  @Bindable
  protected Food mFood;

  protected FoodDataBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatButton btnAdd, Group groupRetry, AppCompatTextView tvDescription,
      AppCompatTextView tvItemCount, AppCompatTextView tvMinus, AppCompatTextView tvPlus,
      AppCompatTextView tvRate, AppCompatTextView tvTitle, View viewPlusMinus) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnAdd = btnAdd;
    this.groupRetry = groupRetry;
    this.tvDescription = tvDescription;
    this.tvItemCount = tvItemCount;
    this.tvMinus = tvMinus;
    this.tvPlus = tvPlus;
    this.tvRate = tvRate;
    this.tvTitle = tvTitle;
    this.viewPlusMinus = viewPlusMinus;
  }

  public abstract void setShouldShowAddButton(@Nullable Boolean shouldShowAddButton);

  @Nullable
  public Boolean getShouldShowAddButton() {
    return mShouldShowAddButton;
  }

  public abstract void setShouldPlusMinusButton(@Nullable Boolean shouldPlusMinusButton);

  @Nullable
  public Boolean getShouldPlusMinusButton() {
    return mShouldPlusMinusButton;
  }

  public abstract void setFood(@Nullable Food food);

  @Nullable
  public Food getFood() {
    return mFood;
  }

  @NonNull
  public static FoodDataBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_single_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FoodDataBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FoodDataBinding>inflateInternal(inflater, R.layout.layout_single_item, root, attachToRoot, component);
  }

  @NonNull
  public static FoodDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_single_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FoodDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FoodDataBinding>inflateInternal(inflater, R.layout.layout_single_item, null, false, component);
  }

  public static FoodDataBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FoodDataBinding bind(@NonNull View view, @Nullable Object component) {
    return (FoodDataBinding)bind(component, view, R.layout.layout_single_item);
  }
}
